{"version":3,"sources":["index.js"],"names":["Main","props","_this","Object","C_Users_r_marek_Documents_MaciekKostki_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_r_marek_Documents_MaciekKostki_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_r_marek_Documents_MaciekKostki_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","greeting","numvalue","enemyBonus","playerBonus","dice","numberOfPropabilities","n","prevProb","probs","i","newProbs","calculatePropability","console","log","tieProb","push","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Probability","winProb","loseProb","count","inputName","newValue","temp","assign","setState","newGreeting","String","_this2","style","float","NumberInput","onChangeCallback","value","updateInputs","initialValue","AddProbabilityButton","onClickCallback","generatePropabilities","React","Component","_this3","valueToSet","undefined","inputText","numericValue","event","numericText","target","iterable","split","filter","el","includes","join","Number","_this4","type","onChange","eventHandler","_this5","Math","max","_this6","text","onClick","increaseValue","decraseValue","previousEventProb","winCount","loseCount","tieCount","total","j","toFixed","tieNumber","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ef8f4af.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\n\r\n\r\n\r\nclass Main extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {greeting: '0', numvalue: 0, enemyBonus: 0, playerBonus: 0, dice: 6, numberOfPropabilities: 1};\r\n    }\r\n\r\n    generatePropabilities()\r\n    {\r\n        let n = this.state.numberOfPropabilities;\r\n        let prevProb = 1.0;\r\n        let probs = [];\r\n        for(let i = 0; i < n; i++)\r\n        {\r\n            let newProbs = calculatePropability(prevProb, this.state.enemyBonus, this.state.playerBonus, this.state.dice);\r\n            console.log(newProbs);\r\n            prevProb = newProbs.tieProb;\r\n            probs.push(<Probability tieProb={newProbs.tieProb} winProb={newProbs.winProb} loseProb={newProbs.loseProb} count={i}/>);\r\n        }\r\n        return probs;\r\n    }\r\n\r\n    updateInputs(inputName, newValue){\r\n        let temp = Object.assign({}, this.state);\r\n        temp[inputName] = newValue;\r\n        this.setState(temp);\r\n    }\r\n\r\n    increment()\r\n    {\r\n        let newValue = this.state.numvalue+1;\r\n        let newGreeting = String(newValue);\r\n        this.setState({numvalue: newValue, greeting: newGreeting});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{float: 'left'}}>Player Bonus: </div>\r\n                <div><NumberInput onChangeCallback={(value)=>this.updateInputs('playerBonus', value)}/></div>\r\n                <div style={{float: 'left'}}>Enemy Bonus: </div>\r\n                <div><NumberInput onChangeCallback={(value)=>this.updateInputs('enemyBonus', value)}/></div>\r\n                <div style={{float: 'left'}}>Dice: </div>\r\n                <div><NumberInput initialValue={6} onChangeCallback={(value)=>this.updateInputs('dice', value)}/></div>\r\n                <AddProbabilityButton onClickCallback={(value)=>this.updateInputs('numberOfPropabilities', value)}/>\r\n                {this.generatePropabilities()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass NumberInput extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        let valueToSet = props.initialValue === undefined ? 0 : props.initialValue;\r\n        this.state = {inputText: String(valueToSet), numericValue: valueToSet};\r\n    }\r\n\r\n    eventHandler(event)\r\n    {\r\n        let numericText = event.target.value;\r\n        let iterable = numericText.split(\"\");\r\n        iterable = iterable.filter((el)=>\"0123456789\".includes(el));\r\n        numericText = iterable.join(\"\");\r\n        let newValue = Number(numericText);\r\n        this.setState({inputText: numericText, numericValue: newValue});\r\n\r\n        if(this.props.onChangeCallback !== undefined)\r\n        {\r\n            this.props.onChangeCallback(newValue);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <input type=\"number\" value={this.state.inputText} onChange={(event)=>this.eventHandler(event)}></input>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddProbabilityButton extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {numericValue: 1};\r\n    }\r\n\r\n    increaseValue()\r\n    {\r\n        let newValue = this.state.numericValue + 1;\r\n        this.setState({numericValue: newValue});\r\n\r\n        if(this.props.onClickCallback !== undefined)\r\n        {\r\n            this.props.onClickCallback(newValue);\r\n        }\r\n    }\r\n\r\n    decraseValue()\r\n    {\r\n        let newValue = Math.max(this.state.numericValue - 1, 0);\r\n        this.setState({numericValue: newValue});\r\n\r\n        if(this.props.onClickCallback !== undefined)\r\n        {\r\n            this.props.onClickCallback(newValue);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <button text=\"increase\" onClick={()=>this.increaseValue()}>INCREASE</button>\r\n                <button text=\"decrase\" onClick={()=>this.decraseValue()}>DECRASE</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculatePropability(previousEventProb, enemyBonus, playerBonus, dice)\r\n{\r\n    let winCount = 0;\r\n    let loseCount = 0;\r\n    let tieCount = 0;\r\n    let total = 0;\r\n\r\n    for(let i = 0; i < dice; i++)\r\n    {\r\n        for(let j = 0; j<dice; j++)\r\n        {\r\n            if(i+playerBonus > j+enemyBonus)\r\n            {\r\n                winCount++;\r\n            }else if(i+playerBonus === j+enemyBonus)\r\n            {\r\n                tieCount++;\r\n            }else{\r\n                loseCount++;\r\n            }\r\n            total++;\r\n        }\r\n    }\r\n\r\n    let winProb = (winCount/total)*previousEventProb;\r\n    let tieProb = (tieCount/total)*previousEventProb;\r\n    let loseProb = (loseCount/total)*previousEventProb;\r\n\r\n    return {winProb: winProb, tieProb: tieProb, loseProb: loseProb};\r\n}\r\n\r\nclass Probability extends React.Component\r\n{\r\n    render()\r\n    {\r\n        let winProb = String((this.props.winProb*100).toFixed(2));\r\n        let loseProb = String((this.props.loseProb*100).toFixed(2));\r\n        let tieProb = String((this.props.tieProb*100).toFixed(2));\r\n        let tieNumber = String(this.props.count);\r\n        return(\r\n            <div className=\"probability_box\">\r\n                <div className='new_line_div'>Consecutive ties: {tieNumber}</div>\r\n                <div className='new_line_div'>Probability of winning: </div>\r\n                <div className='content_div'>{winProb}{\"%\"}</div>\r\n                <div className='new_line_div'>Probability of losing: </div>\r\n                <div className='content_div'>{loseProb}{\"%\"}</div>\r\n                <div className='new_line_div'>Probability of tie: </div>\r\n                <div className='content_div'>{tieProb}{\"%\"}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Main/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}